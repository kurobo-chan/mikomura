@charset "UTF-8";
/* arrow */
.arrow {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 40px;
  height: 80px;
  transform: translateX(-50%) translateY(-50%);
  cursor: pointer;
  transition: transform 0.1s;
}
.arrow-top, .arrow-bottom {
  position: absolute;
  top: 50%;
  left: -5px;
  width: 100%;
  height: 4px;
  background-color: var(--secondary);
}
.arrow-top:after, .arrow-bottom:after {
  position: absolute;
  top: 0;
  height: 100%;
  background-color: var(--primary);
  content: "";
  transition: all 0.15s;
}
.arrow-top {
  transform: rotate(45deg);
  transform-origin: bottom right;
}
.arrow-top:after {
  right: 0;
  left: 100%;
  transition-delay: 0s;
}
.arrow-bottom {
  transform: rotate(-45deg);
  transform-origin: top right;
}
.arrow-bottom:after {
  right: 100%;
  left: 0;
  transition-delay: 0.15s;
}
.arrow:hover .arrow-top:after {
  left: 0;
  transition-delay: 0.15s;
}
.arrow:hover .arrow-bottom:after {
  right: 0;
  transition-delay: 0s;
}
.arrow:active {
  transform: translateX(-50%) translateY(-50%) scale(0.9);
}

.next:hover .controlName,
.prev:hover .controlName {
  opacity: 1;
}

.controlName {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  color: var(--primary);
  font-weight: bold;
  font-size: 18px;
  line-height: 1;
  font-family: var(--Montserrat);
  text-transform: capitalize;
  opacity: 0;
  transition: 0.5s ease-in-out;
}

.contact {
  /* ///// inputs /////*/
}
.contact h1 {
  font-family: var(--Montserrat);
}
.contact .input-container {
  display: grid;
  gap: 2em;
}
.contact input:focus ~ label,
.contact textarea:focus ~ label,
.contact input:valid ~ label,
.contact textarea:valid ~ label {
  -webkit-transition: all 0.225s ease;
  top: -5px;
  color: var(--primary);
  font-size: 0.75em;
  transition: all 0.225s ease;
}
.contact .styled-input {
  position: relative;
  border-radius: 4px;
}
.contact .col-pc {
  display: contents;
}
.contact .col-pc > * {
  width: 100%;
}
.contact .styled-input label {
  -webkit-transition: all 0.25s ease;
  position: absolute;
  top: 10px;
  left: 0;
  padding: 1.3rem 30px 1rem 30px;
  color: var(--primary);
  font-family: var(--Montserrat);
  pointer-events: none;
  transition: all 0.25s ease;
}
.contact input,
.contact textarea {
  display: block;
  width: 100%;
  padding: 30px;
  border: 0;
  border-radius: 4px;
  background-color: rgba(176, 190, 197, 0.2);
  color: var(--text);
  font-size: 1rem;
}
.contact input:focus,
.contact textarea:focus {
  outline: 0;
}
.contact input:focus ~ span,
.contact textarea:focus ~ span {
  -webkit-transition: all 0.075s ease;
  width: 100%;
  transition: all 0.075s ease;
}
.contact textarea {
  width: 100%;
  min-height: 15em;
}
.contact .sendBtn {
  margin: 0 0 0 auto;
  background-color: var(--accent);
}
.contact .submit-btn:hover {
  transform: translateY(1px);
  box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.1), 0 1px 1px 0 rgba(0, 0, 0, 0.09);
}

/* Basic Colors */
:root {
  --primary: #546e7a;
  --secondary: #b0bec5;
  --accent: #d81b60;
  --text: #263238;
  --white: #ffffff;
  --twitter: #1da1f2;
  --facebook: #1877f2;
}

/* Font Family */
:root {
  --Montserrat: "Montserrat", sans-serif;
  --NotoSansJP: "Noto Sans JP", sans-serif;
}

/* Basic Size */
:root {
  --size1-half: calc(var(--size1) / 2);
  --size1: 4vw;
  --size2: calc(var(--size1) * 2);
  --size3: calc(var(--size1) * 3);
  --size4: calc(var(--size1) * 4);
}

/* Basic Settings */
body {
  color: var(--text);
  font-family: var(--NotoSansJP);
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

body,
h1,
h2,
h3,
p,
ul,
figure {
  margin: 0;
  padding: 0;
  list-style: none;
}

a {
  color: inherit;
  text-decoration: none;
}

a:hover {
  opacity: 0.9;
}

img {
  max-width: 100%;
  height: auto;
  vertical-align: bottom;
}

figure img {
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}

/* Clamp y=ax + b*/
*,
*::before,
*::after {
  /* 最小サイズ、最大サイズ、最小画面、最大画面幅（単位px） */
  --min-size: 39;
  --max-size: 48;
  --min-viewport: 375;
  --max-viewport: 1440;
  /* a 傾き */
  --slope: calc(var(--max-size) - var(--min-size)) /
    (var(--max-viewport) - var(--min-viewport));
  /* b 切片 */
  --intercept: calc(var(--min-size) - var(--slope) * var(--min-viewport));
  /* y=ax + b 可変サイズ */
  --fluid-size: calc(var(--slope) * 100vw + var(--intercept) / 16 * 1rem);
  /* clamp(最小サイズ、可変サイズ、最大サイズ)  */
  --clamp-size: clamp(
    var(--min-size) / 16 * 1rem,
    var(--fluid-size),
    var(--max-size) / 16 * 1rem
  );
}

/* Fluid typography */
h1,
h2 {
  font-weight: bold;
  font-size: var(--clamp-size);
  line-height: 1.3;
  font-family: var(--NotoSansJP);
}

h2 {
  --min-size: 31;
  --max-size: 39;
  font-size: var(--clamp-size);
  line-height: 1;
}

p,
ul {
  --min-size: 16;
  --max-size: 18;
  font-weight: 400;
  font-size: var(--clamp-size);
  line-height: 2;
}
a.privacyPolicy{
--min-size: 10;
--max-size: 13;
font-size: var(--clamp-size);
display: block;
color: var(--secondary);
}
.copyLight,
.privacyPolicy {
  --min-size: 16;
  --max-size: 20;
  font-size: var(--clamp-size);
  line-height: 1;
  font-family: var(--Montserrat);
  text-align: center;
  text-transform: capitalize;
}

.nav a {
  --min-size: 31;
  --max-size: 39;
  color: var(--secondary);
  font-weight: 800;
  font-size: var(--clamp-size);
  font-family: var(--Montserrat);
  text-align: center;
  text-transform: capitalize;
}

.about {
  text-align: center;
}
.about h1,
.about h2 {
  -webkit-margin-after: 0.5em;
          margin-block-end: 0.5em;
  font-family: var(--Montserrat);
  text-transform: capitalize;
}
.about h1 {
  --min-size: 25;
  --max-size: 31;
  font-size: var(--clamp-size);
}
.about h2 {
  --min-size: 16;
  --max-size: 20;
  font-size: var(--clamp-size);
}

/* Layout --------- */
/* Section spacing */
/* Header --------- */
/* Screen reader */
.sr-only {
  clip: rect(0 0 0 0);
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  border: 0;
}

/* Hamburger button */
.navBtn {
  -webkit-tap-highlight-color: transparent;
  all: unset;
  display: grid;
  z-index: 1000;
  position: fixed;
  right: var(--size1);
  bottom: var(--size2);
  place-items: center;
  aspect-ratio: 1/1;
  width: 60px;
  outline: revert;
  background-color: var(--secondary);
  color: var(--white);
  -webkit-clip-path: circle(50%);
          clip-path: circle(50%);
  cursor: pointer;
}
.navBtn-bar,
.navBtn::before,
.navBtn::after {
  display: block;
  grid-area: 1/1;
  width: clamp(24px, var(--size3), 42px);
  height: 2px;
  background-color: currentColor;
  content: "";
  transition: transform 0.5s;
}

.navBtn::before {
  transform: translateY(-8px);
}

.navBtn::after {
  transform: translateY(8px);
}

.open .navBtn {
  z-index: 200;
}
.open .navBtn-bar {
  transform: scale(0);
}
.open .navBtn::before {
  transform: translateY(0) rotate(45deg);
}
.open .navBtn::after {
  transform: translateY(0) rotate(-45deg);
}

/* page-control --------- */
/* nav */
.nav {
  z-index: 100;
  position: fixed;
  top: 0;
  right: -100%;
  width: 100%;
  height: 100%;
  background-color: var(--primary);
  transition: transform 0.5s;
}
.nav ul {
  box-sizing: border-box;
  display: grid;
  place-items: center;
  height: inherit;
  padding-block: var(--size2);
  text-align: center;
}

.open {
  position: fixed;
  overflow: hidden;
}
.open .nav {
  transform: translate(-100%, 0);
}

/* Container --------- */
.container {
  display: grid;
  grid-template-columns: repeat(2, var(--size1)) auto repeat(2, var(--size1));
  row-gap: var(--size1);
  -webkit-padding-before: var(--size2);
          padding-block-start: var(--size2);
}
.container > * {
  grid-column: 2/-2;
}
/* About --------- */
.about .container {
  padding-block: 240px 96px;
}
.about .container > * {
  grid-column: 3/-3;
}

/* moreButton */
.more {
  --min-size: 18;
  --max-size: 20;
  display: flex;
  place-content: center;
  gap: 1em;
  font-weight: bold;
  font-size: var(--clamp-size);
  font-family: var(--Montserrat);
}

.moreContents {
  display: none;
}

.more-open .more {
  display: none;
}
.more-open .moreContents {
  display: block;
  -webkit-animation-duration: 1s;
          animation-duration: 1s;
  -webkit-animation-name: fade;
          animation-name: fade;
}

@-webkit-keyframes fade {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

@keyframes fade {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
/* Post --------- */
/* titleBody */
.PublishDate {
  --min-size: 16;
  --max-size: 18;
  -webkit-margin-before: 1em;
          margin-block-start: 1em;
  font-size: var(--clamp-size);
  line-height: 1;
  font-family: var(--Montserrat);
  text-transform: capitalize;
}

.tag {
  -webkit-margin-before: 1em;
          margin-block-start: 1em;
}
.tag ul {
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;
  gap: 0.6em;
  line-height: 1;
}

.eyecatch {
  aspect-ratio: 333/130;
  height: auto;
  -webkit-margin-before: var(--size1);
          margin-block-start: var(--size1);
}

/* postBody */
.postBody{
	overflow: hidden;
}
.postBody > * {
  -webkit-margin-after: var(--size1);
          margin-block-end: var(--size1);
}

/* PostList --------- */
.mainTitle {
  font-family: var(--Montserrat);
  text-transform: capitalize;
}

.subTitle {
  --min-size: 13;
  --max-size: 16;
  -webkit-margin-before: 1em;
          margin-block-start: 1em;
  font-size: var(--clamp-size);
  line-height: 1.6;
  font-family: var(--Montserrat);
  text-transform: capitalize;
}

/* list */
.list {
  display: grid;
  gap: var(--size2);
}
.list ul {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  align-content: flex-start;
  gap: 40px;
}
.list .eyecatch {
  display: block;
  position: relative;
  aspect-ratio: 3/2;
  width: 100%;
  height: 100%;
  -webkit-margin-before: 0;
          margin-block-start: 0;
  transform-style: flat;
  background-position: center center;
  background-size: cover;
}
.list .eyecatch::before {
  z-index: 20;
  position: absolute;
  inset: 0;
  box-shadow: 0 0 50px rgba(0, 0, 0, 0.75) inset;
  content: "";
}
.list .eyecatch img {
  position: absolute;
  inset: 0;
}

/* listTitle */
.listTitle {
  z-index: 8;
  position: absolute;
  top: 50%;
  left: 50%;
  padding: 1em;
  transform: translate(-50%, -50%);
  border-radius: 3px;
  background-color: rgba(0, 0, 0, 0.8);
  color: var(--secondary);
  font-size: 1em;
  line-height: 1.8;
  text-align: center;
  text-shadow: 2px 2px 2px rgba(255, 255, 255, 0.25);
  text-transform: capitalize;
}

/* screen */
.screen {
  display: block;
  z-index: 10;
  position: relative;
  overflow: hidden;
  box-shadow: 8px 8px 0 rgba(0, 0, 0, 0.15);
}

/* moreButton */
.moreButton {
  --min-size: 13;
  --max-size: 16;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 1em;
  gap: 0.5em;
  border: none;
  border-radius: 5px;
  background-color: var(--primary);
  color: var(--white);
  font-weight: bold;
  font-size: var(--clamp-size);
  font-family: var(--Montserrat);
  text-align: center;
  cursor: pointer;
}

/* share */
.share p {
  --min-size: 10;
  --max-size: 13;
  -webkit-margin-after: var(--size1);
          margin-block-end: var(--size1);
  font-size: var(--clamp-size);
  line-height: 2;
  text-align: center;
}

.shareButton {
  display: flex;
  place-content: center;
  gap: 1em;
}
.shareButton li {
  line-height: 1;
}
.shareButton .linkBtn {
  font-family: var(--Montserrat);
}
.shareButton .text span {
  -webkit-padding-start: 0.3em;
          padding-inline-start: 0.3em;
}
.shareButton .twitter {
  background-color: var(--twitter);
}
.shareButton .facebook {
  background-color: var(--facebook);
}

/* pagination */
.pagination ul {
  display: grid;
  grid-auto-flow: column;
  align-items: center;
  justify-content: space-between;
  gap: var(--size2);
}
.pagination a {
  --min-size: 10;
  --max-size: 13;
  display: flex;
  align-items: center;
  gap: 1em;
  font-size: var(--clamp-size);
  line-height: 1.65;
}
.pagination .next {
  position: revert;
  justify-content: flex-end;
  width: auto;
  height: auto;
}
.pagination .prev {
  position: revert;
  justify-content: flex-start;
  width: auto;
  height: auto;
}
/* Footer --------- */
.footer {
  -webkit-padding-before: var(--size1);
          padding-block-start: var(--size1);
  -webkit-padding-after: var(--size2);
          padding-block-end: var(--size2);
}
@media (min-width: 768px) {
  .contact .col-pc {
    display: flex;
    justify-content: space-between;
    gap: 1em;
  }
  .navBtn {
    top: var(--size1);
    background: none;
    color: var(--primary);
  }

  .open .navBtn {
    color: var(--secondary);
  }
  .controlName {
    line-height: 1.65;
  }

  .prev,.next {
    display: block;
    position: fixed;
    top: 25%;
    left: 0;
    width: 240px;
    height: 50%;
  }
  .prev .controlName {
    right: 0;
  }
  .prev .arrow {
    transform: translateX(-50%) scale(-1, 1) translateY(-50%);
  }
  .next {
    right: 0;
	left: auto;
  }
  .hidden {
    display: none;
  }
  .container {
    grid-template-columns: auto 58vw auto;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
